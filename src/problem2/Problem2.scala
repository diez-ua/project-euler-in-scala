package problem2

import scala.annotation.tailrec

/**
 * Each new term in the Fibonacci sequence is generated by adding the
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
object Problem2 extends App {

  def fibSum(limit: Int) = {
    val firstFib = 1
    val secondFib = 2

    @tailrec
    def rec(i1: Int, i2: Int, acc: Int, threshold: Int): Int = {
      if (i2 > threshold)
        acc
      else {
        // Increment should be
        // 0 if (i2 % 2 == 1)
        // or i2 if (i2 % 2 == 0)
        val increment = i2 * (1 - i2 % 2)
        rec(i2, i1 + i2, acc + increment, threshold)
      }
    }

    rec(firstFib, secondFib, 0, limit)
  }

  println(fibSum(4000000))
}
