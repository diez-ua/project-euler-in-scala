package problem2

import scala.annotation.tailrec

/**
 * Each new term in the Fibonacci sequence is generated by adding the
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
object Problem2 extends App {

  @tailrec
  private def fibSum0(i1: Int, i2: Int, sum: Int, limit: Int):Int = {
    if (i2 > limit)
      sum
    else {
      // Increment should be
      // 0 if (i2 % 2 == 1)
      // or i2 if (i2 % 2 == 0)
      val incr = i2 * (1 - i2 % 2)
      fibSum0(i2, i1+i2, sum + incr, limit)
    }
  }

  private val firstFib = 1
  private val secondFib = 2
  def fibSum(limit: Int) = fibSum0(firstFib, secondFib, 0, limit)

  println(fibSum(4000000))
}
